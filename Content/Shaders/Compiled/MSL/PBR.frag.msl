#include <metal_stdlib>
#include <simd/simd.h>

using namespace metal;

struct type_Light
{
    float3 u_lightcolor;
};

struct main0_out
{
    float4 out_var_SV_Target0 [[color(0)]];
};

struct main0_in
{
    float3 in_var_POSITION1 [[user(locn1)]];
    float3 in_var_POSITION2 [[user(locn2)]];
    float4 in_var_NORMAL0 [[user(locn3)]];
    float2 in_var_TEXCOORD0 [[user(locn4)]];
};

fragment main0_out main0(main0_in in [[stage_in]], constant type_Light& Light [[buffer(0)]], texture2d<float> AlbedoTex [[texture(0)]], sampler Sampler [[sampler(0)]])
{
    main0_out out = {};
    float3 _45 = fast::normalize(in.in_var_NORMAL0).xyz;
    float3 _47 = fast::normalize(in.in_var_POSITION2 - in.in_var_POSITION1);
    out.out_var_SV_Target0 = float4(((Light.u_lightcolor * 0.100000001490116119384765625) + (Light.u_lightcolor * precise::max(dot(_45, _47), 0.0))) + (Light.u_lightcolor * (0.5 * powr(precise::max(dot(fast::normalize(-in.in_var_POSITION1), reflect(-_47, _45)), 0.0), 32.0))), 1.0) * AlbedoTex.sample(Sampler, in.in_var_TEXCOORD0);
    return out;
}

